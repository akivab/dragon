from __future__ import absolute_import
from . import Extension
from ..inlinepatterns import Pattern
from ..odict import OrderedDict
from ..util import etree
import re
 
class EmoticonExtension(Extension):
  def __init__ (self, configs):
    self.config = {
      'EMOTICONS': [{
          ':D':     'excited',
          ':o':     'shocked',
          ':(':     'sad',
          ':)':     'happy',
          ':p':     'tongue',
          ';)':     'wink',
          ':act-up:':     'act-up',
          ':afraid:':     'afraid',
          ':airplane:':     'airplane',
          ':alien:':     'alien',
          ':amorous:':     'amorous',
          ':angel:':     'angel',
          ':angry:':     'angry',
          ':arrogant:':     'arrogant',
          ':at-wits-end:':     'at-wits-end',
          ':bad:':     'bad',
          ':bashful:':     'bashful',
          ':beat-up:':     'beat-up',
          ':beauty:':     'beauty',
          ':beer:':     'beer',
          ':blowkiss:':     'blowkiss',
          ':bomb:':     'bomb',
          ':bored:':     'bored',
          ':bowl:':     'bowl',
          ':boy:':     'boy',
          ':brb:':     'brb',
          ':bulgy-eyes:':     'bulgy-eyes',
          ':bunny:':     'bunny',
          ':bye:':     'bye',
          ':cake:':     'cake',
          ':call-me:':     'call-me',
          ':camera:':     'camera',
          ':can:':     'can',
          ':car:':     'car',
          ':cat:':     'cat',
          ':chicken:':     'chicken',
          ':chilli:':     'chilli',
          ':cigarette:':     'cigarette',
          ':clap:':     'clap',
          ':clock:':     'clock',
          ':cloudy:':     'cloudy',
          ':clover:':     'clover',
          ':clown:':     'clown',
          ':coffee:':     'coffee',
          ':coins:':     'coins',
          ':cold:':     'cold',
          ':computer:':     'computer',
          ':confused:':     'confused',
          ':console:':     'console',
          ':cowboy:':     'cowboy',
          ':cow:':     'cow',
          ':crying:':     'crying',
          ':curl-lip:':     'curl-lip',
          ':curse:':     'curse',
          ':cute:':     'cute',
          ':cyclops:':     'cyclops',
          ':dance:':     'dance',
          ':dazed:':     'dazed',
          ':desire:':     'desire',
          ':devil:':     'devil',
          ':disappointed:':     'disappointed',
          ':disdain:':     'disdain',
          ':doctor:':     'doctor',
          ':dog:':     'dog',
          ':doh:':     'doh',
          ':dont-know:':     'dont-know',
          ':drink:':     'drink',
          ':drool:':     'drool',
          ':embarrassed:':     'embarrassed',
          ':excited:':     'excited',
          ':excruciating:':     'excruciating',
          ':eyeroll:':     'eyeroll',
          ':female-fighter:':     'female-fighter',
          ':film:':     'film',
          ':fingers-crossed:':     'fingers-crossed',
          ':flag:':     'flag',
          ':foot-in-mouth:':     'foot-in-mouth',
          ':freaked-out:':     'freaked-out',
          ':ghost:':     'ghost',
          ':giggle:':     'giggle',
          ':girl:':     'girl',
          ':glasses-cool:':     'glasses-cool',
          ':glasses-nerdy:':     'glasses-nerdy',
          ':goat:':     'goat',
          ':go-away:':     'go-away',
          ':good:':     'good',
          ':hammer:':     'hammer',
          ':handcuffs:':     'handcuffs',
          ':handshake:':     'handshake',
          ':happy:':     'happy',
          ':highfive:':     'highfive',
          ':hot:':     'hot',
          ':hug-left:':     'hug-left',
          ':hug-right:':     'hug-right',
          ':hungry:':     'hungry',
          ':hypnotized:':     'hypnotized',
          ':in_love:':     'in_love',
          ':island:':     'island',
          ':jump:':     'jump',
          ':kissed:':     'kissed',
          ':kissing:':     'kissing',
          ':kiss:':     'kiss',
          ':knife:':     'knife',
          ':lamp:':     'lamp',
          ':lashes:':     'lashes',
          ':laugh:':     'laugh',
          ':liquor:':     'liquor',
          ':loser:':     'loser',
          ':love-over:':     'love-over',
          ':lying:':     'lying',
          ':mad-tongue:':     'mad-tongue',
          ':mail:':     'mail',
          ':male-fighter1:':     'male-fighter1',
          ':male-fighter2:':     'male-fighter2',
          ':mean:':     'mean',
          ':meeting:':     'meeting',
          ':messed:':     'messed',
          ':mobile:':     'mobile',
          ':mohawk:':     'mohawk',
          ':moneymouth:':     'moneymouth',
          ':monkey:':     'monkey',
          ':moon:':     'moon',
          ':mrgreen:':     'mrgreen',
          ':msn-away:':     'msn-away',
          ':msn-busy:':     'msn-busy',
          ':msn_online:':     'msn_online',
          ':msn:':     'msn',
          ':musical-note:':     'musical-note',
          ':music:':     'music',
          ':nervous:':     'nervous',
          ':neutral:':     'neutral',
          ':on-the-phone:':     'on-the-phone',
          ':party:':     'party',
          ':peace:':     'peace',
          ':phone:':     'phone',
          ':pig:':     'pig',
          ':pill:':     'pill',
          ':pirate:':     'pirate',
          ':pissed-off:':     'pissed-off',
          ':pizza:':     'pizza',
          ':plate:':     'plate',
          ':poop:':     'poop',
          ':pray:':     'pray',
          ':present:':     'present',
          ':pumpkin:':     'pumpkin',
          ':question:':     'question',
          ':quiet:':     'quiet',
          ':rainbow:':     'rainbow',
          ':rain:':     'rain',
          ':rose-dead:':     'rose-dead',
          ':rose:':     'rose',
          ':rotfl:':     'rotfl',
          ':sad:':     'sad',
          ':sarcastic:':     'sarcastic',
          ':search:':     'search',
          ':secret:':     'secret',
          ':shame:':     'shame',
          ':sheep:':     'sheep',
          ':shocked:':     'shocked',
          ':shout:':     'shout',
          ':shut-mouth:':     'shut-mouth',
          ':sick:':     'sick',
          ':sidefrown:':     'sidefrown',
          ':silly:':     'silly',
          ':sinister:':     'sinister',
          ':skeleton:':     'skeleton',
          ':skywalker:':     'skywalker',
          ':sleeping:':     'sleeping',
          ':sleepy:':     'sleepy',
          ':smirk:':     'smirk',
          ':snail:':     'snail',
          ':snicker:':     'snicker',
          ':snowman:':     'snowman',
          ':soccerball:':     'soccerball',
          ':soldier:':     'soldier',
          ':star:':     'star',
          ':starving:':     'starving',
          ':stop:':     'stop',
          ':stressed:':     'stressed',
          ':struggle:':     'struggle',
          ':sun:':     'sun',
          ':talktohand:':     'talktohand',
          ':teeth:':     'teeth',
          ':terror:':     'terror',
          ':thinking:':     'thinking',
          ':thunder:':     'thunder',
          ':time-out:':     'time-out',
          ':tongue:':     'tongue',
          ':turtle:':     'turtle',
          ':tv:':     'tv',
          ':umbrella:':     'umbrella',
          ':vampire:':     'vampire',
          ':victory:':     'victory',
          ':waiting:':     'waiting',
          ':watermelon:':     'watermelon',
          ':waving:':     'waving',
          ':weep:':     'weep',
          ':wilt:':     'wilt',
          ':wink:':     'wink',
          ':worship:':     'worship',
          ':yin-yang:':     'yin-yang',
        }, 'A mapping from emoticon symbols to image names.'],
      'BASE_URL': ['', 'The base URL at which emoticons are accessible.'],
      'FILE_EXTENSION': ['gif', 'The file extension to be used for emoticon images.'],
    }
 
    for key, value in configs :
      self.config[key][0] = value
 
  def extendMarkdown(self, md, md_globals):
    self.md = md
    EMOTICON_RE = '(?P<emoticon>%s)' % '|'.join(
      [re.escape(e) \
       for e in self.config['EMOTICONS'][0]])
    md.inlinePatterns.add('emoticon', EmoticonPattern(EMOTICON_RE, self),
        '_end')
 
class EmoticonPattern(Pattern):
  def __init__ (self, pattern, emoticons):
    Pattern.__init__(self, pattern)
    self.emoticons = emoticons
 
  def handleMatch(self, m):
    emoticon = m.group('emoticon')
    el = etree.Element('img')
    el.set('src', '%s%s.%s' % (
      self.emoticons.getConfig('BASE_URL'),
      self.emoticons.getConfig('EMOTICONS')[emoticon],
      self.emoticons.getConfig('FILE_EXTENSION')))
    el.set('alt', emoticon)
    return el
 
def makeExtension(configs=None) :
  return EmoticonExtension(configs=configs)
 
if __name__ == '__main__':
  import doctest
  doctest.testmod()

